---
import Options from "@components/Options.astro";
import Layout from "@layouts/LayoutStory.astro";
import { turso } from "@src/turso";
import { type Node, type Option } from "@types";
export const prerender = false;

const { slug, node: nodeParam } = Astro.params;
const parentSlug = slug as string;

if (!nodeParam) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const nodeResponse = await turso.execute({
  sql: "SELECT * FROM nodes WHERE slug = ? AND parent_slug = ?;",
  args: [nodeParam as string, parentSlug],
});

if (!nodeResponse.rows.length) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}
const nodeData = nodeResponse.rows[0] as any;
if (!nodeData) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const node = {
  id: nodeData.id,
  slug: nodeData.slug,
  text: nodeData.text,
  options: JSON.parse(nodeData.options),
  title: nodeData.title,
  description: nodeData.description,
  parentSlug: nodeData.parent_slug,
  backSlug: nodeData.back_slug,
} as Node;


const backUrl =
  node.backSlug === node.parentSlug
    ? `/${node.parentSlug}`
    : `/${node.parentSlug}/${node.backSlug}`;
---

<Layout title={node.title} description={node.description} slug={node.parentSlug} options={node.options} optionSlug={node.parentSlug} backUrl={backUrl}>
  <div set:html={node.text} />
</Layout>
