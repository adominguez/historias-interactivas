---
import { getCategoriesByType } from '@src/turso';
import { CldImage } from 'astro-cloudinary';

interface Props {
  type: string;
  title?: string;
  effect?: string;
  id?: string;
  content?: string;
}

const { type, title = 'Qué Categoría quieres?', effect = 'fog', id='categorias', content = 'Elige una categoría para comenzar a disfrutar de los cuentos interactivos.' } = Astro.props;

const categories = await getCategoriesByType(type);
---

<section class:list={[
  "px-4 py-20 relative",
  effect
]} id={id}>
  <div class="flex flex-col gap-8 mx-auto max-w-7xl">
    <h2 class="text-white text-balance">{title}</h2>
    <p class="text-gray-300 text-balance">{content}</p>
    <div class={`wrapper-${type} grid gap-4 z-20`}>
      {
        categories.map(({name, slug, title}) => (
          <article class:list={[
            "relative overflow-hidden rounded-lg",
            "aspect-[300/400]"
          ]}>
            <a href={`cuentos/${slug}`} class="link peer absolute bottom-0 px-2 py-4 text-white border-transparent hover:border-red text-center top-0 left-0 right-0 flex flex-col justify-end items-center text-balance z-20 leading-6 hover:text-white">{title}</a>
            <CldImage
              src={`cuentos-interactivos/categories/${name}_cat`}
              width={300}
              height={400}
              alt={title as string}
              sizes="100vw"
              class="peer-hover:scale-110 z-10 rounded-lg transition-transform"
            />
          </article>
        ))
      }
    </div>
  </div>
</section>

<style>
  section {
    
    &.fog {
      background-image: radial-gradient(ellipse at bottom,#1b2735 0%,#090a0f 100%);
      &::after {
        content: '';
        position: absolute;
        right: 0;
        bottom: 0;
        background-image: url('categories/fog1.png');
        background-size: 200% auto;
        background-position: 0 bottom;
        width: 100%;
        height: 100%;
        z-index: 10;
        animation: fog 30s linear infinite;
        filter: brightness(2.5);
      }
    }

    &.cloud {
      background-image: radial-gradient(ellipse at bottom,#63acff 0%,#5b72e6 100%);
      &::after {
        content: '';
        position: absolute;
        right: 0;
        bottom: 0;
        background-image: url('https://www.clicktorelease.com/blog/css3dclouds/cloud.png');
        background-size: 200% auto;
        background-position: 0 bottom;
        width: 100%;
        height: 100%;
        z-index: 10;
        animation: fog 30s linear infinite;
        filter: brightness(2.5);
      }
    }
  }

  .wrapper-general {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }

  .wrapper-age {
    gap: 3rem;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  }

  .link:hover {
    text-shadow: 0px 0px 10px #fff;
  }

  @keyframes fog {
    0% {
      background-position: -200% bottom;
      filter: brightness(3.5);
      opacity: 1;
    }
    10% {
      filter: brightness(2.5);
      opacity: 0.7;
    }
    50% {
      filter: brightness(2);
      opacity: 0.5;
    }
    90% {
      filter: brightness(2.5);
      opacity: 0.7;
    }
    100% {
      background-position: 0 bottom;
      filter: brightness(3.5);
      opacity: 1;
    }
  }
</style>